{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amitk\\\\Capstone\\\\SocialFriction\\\\frontend\\\\src\\\\components\\\\FocusMode.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FocusMode = () => {\n  _s();\n  const [isActive, setIsActive] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [remainingTime, setRemainingTime] = useState(25 * 60); // 25 minutes in seconds\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [isBreak, setIsBreak] = useState(false);\n  const [error, setError] = useState('');\n  const [completedSessions, setCompletedSessions] = useState(0);\n  useEffect(() => {\n    // Fetch focus mode status when component mounts\n    const fetchFocusModeStatus = async () => {\n      try {\n        const response = await api.get('/focus-mode/status');\n        setIsActive(response.data.isActive);\n        setRemainingTime(response.data.remainingTime);\n        setIsBreak(response.data.isBreak || false);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchFocusModeStatus();\n  }, []);\n  useEffect(() => {\n    let interval;\n    if (isActive && !isPaused) {\n      interval = setInterval(() => {\n        setRemainingTime(prevTime => {\n          if (prevTime <= 1) {\n            // Time's up\n            if (isBreak) {\n              // Break is over, start a new focus session\n              handleBreakComplete();\n              return focusDuration * 60;\n            } else {\n              // Focus session is over, start a break\n              handleFocusComplete();\n              return breakDuration * 60;\n            }\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, isPaused, isBreak, focusDuration, breakDuration]);\n  const handleFocusComplete = async () => {\n    try {\n      setIsBreak(true);\n      setCompletedSessions(prev => prev + 1);\n      await api.post('/focus-mode/stop');\n      // Earn focus credits for completing a session\n      await api.post('/rewards/earn', {\n        amount: 10,\n        reason: 'Completed focus session'\n      });\n    } catch (err) {\n      setError('Failed to complete focus session');\n      console.error(err);\n    }\n  };\n  const handleBreakComplete = async () => {\n    try {\n      setIsBreak(false);\n      await api.post('/focus-mode/start');\n    } catch (err) {\n      setError('Failed to start new focus session');\n      console.error(err);\n    }\n  };\n  const startFocusMode = async () => {\n    try {\n      const response = await api.post('/focus-mode/start');\n      setIsActive(true);\n      setIsPaused(false);\n      setIsBreak(false);\n      setRemainingTime(focusDuration * 60);\n      setError('');\n    } catch (err) {\n      setError('Failed to start focus mode');\n      console.error(err);\n    }\n  };\n  const pauseFocusMode = () => {\n    setIsPaused(true);\n  };\n  const resumeFocusMode = () => {\n    setIsPaused(false);\n  };\n  const stopFocusMode = async () => {\n    try {\n      await api.post('/focus-mode/stop');\n      setIsActive(false);\n      setIsPaused(false);\n      setRemainingTime(focusDuration * 60);\n      setIsBreak(false);\n      setError('');\n    } catch (err) {\n      setError('Failed to stop focus mode');\n      console.error(err);\n    }\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"focus-mode-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Focus Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: isBreak ? 'Break Time' : 'Focus Time'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time\",\n          children: formatTime(remainingTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"session-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Completed Sessions: \", completedSessions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current Mode: \", isBreak ? 'Break' : 'Focus']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-controls\",\n      children: !isActive ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setup-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"focusDuration\",\n            children: \"Focus Duration (minutes):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"focusDuration\",\n            value: focusDuration,\n            onChange: e => setFocusDuration(Math.max(1, parseInt(e.target.value) || 25)),\n            min: \"1\",\n            max: \"60\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"breakDuration\",\n            children: \"Break Duration (minutes):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"breakDuration\",\n            value: breakDuration,\n            onChange: e => setBreakDuration(Math.max(1, parseInt(e.target.value) || 5)),\n            min: \"1\",\n            max: \"30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startFocusMode,\n          children: \"Start Focus Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"active-controls\",\n        children: [isPaused ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resumeFocusMode,\n          children: \"Resume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: pauseFocusMode,\n          children: \"Pause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stopFocusMode,\n          children: \"Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"focus-explanation\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"About Focus Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Focus Mode uses the Pomodoro Technique to help you maintain concentration and productivity. Work for a set period (default 25 minutes), then take a short break (default 5 minutes). This cycle helps maintain mental freshness and sustained focus.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Each completed focus session earns you Focus Credits that can be redeemed for rewards!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(FocusMode, \"KoldeM/77fSU85qZvjK0fUBR2sQ=\");\n_c = FocusMode;\nexport default FocusMode;\nvar _c;\n$RefreshReg$(_c, \"FocusMode\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","FocusMode","_s","isActive","setIsActive","isPaused","setIsPaused","remainingTime","setRemainingTime","focusDuration","setFocusDuration","breakDuration","setBreakDuration","isBreak","setIsBreak","error","setError","completedSessions","setCompletedSessions","fetchFocusModeStatus","response","get","data","err","console","interval","setInterval","prevTime","handleBreakComplete","handleFocusComplete","clearInterval","prev","post","amount","reason","startFocusMode","pauseFocusMode","resumeFocusMode","stopFocusMode","formatTime","seconds","minutes","Math","floor","remainingSeconds","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","max","parseInt","target","min","onClick","_c","$RefreshReg$"],"sources":["C:/Users/amitk/Capstone/SocialFriction/frontend/src/components/FocusMode.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst FocusMode: React.FC = () => {\r\n  const [isActive, setIsActive] = useState<boolean>(false);\r\n  const [isPaused, setIsPaused] = useState<boolean>(false);\r\n  const [remainingTime, setRemainingTime] = useState<number>(25 * 60); // 25 minutes in seconds\r\n  const [focusDuration, setFocusDuration] = useState<number>(25);\r\n  const [breakDuration, setBreakDuration] = useState<number>(5);\r\n  const [isBreak, setIsBreak] = useState<boolean>(false);\r\n  const [error, setError] = useState<string>('');\r\n  const [completedSessions, setCompletedSessions] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    // Fetch focus mode status when component mounts\r\n    const fetchFocusModeStatus = async () => {\r\n      try {\r\n        const response = await api.get('/focus-mode/status');\r\n        setIsActive(response.data.isActive);\r\n        setRemainingTime(response.data.remainingTime);\r\n        setIsBreak(response.data.isBreak || false);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    fetchFocusModeStatus();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let interval: NodeJS.Timeout;\r\n\r\n    if (isActive && !isPaused) {\r\n      interval = setInterval(() => {\r\n        setRemainingTime((prevTime) => {\r\n          if (prevTime <= 1) {\r\n            // Time's up\r\n            if (isBreak) {\r\n              // Break is over, start a new focus session\r\n              handleBreakComplete();\r\n              return focusDuration * 60;\r\n            } else {\r\n              // Focus session is over, start a break\r\n              handleFocusComplete();\r\n              return breakDuration * 60;\r\n            }\r\n          }\r\n          return prevTime - 1;\r\n        });\r\n      }, 1000);\r\n    }\r\n\r\n    return () => clearInterval(interval);\r\n  }, [isActive, isPaused, isBreak, focusDuration, breakDuration]);\r\n\r\n  const handleFocusComplete = async () => {\r\n    try {\r\n      setIsBreak(true);\r\n      setCompletedSessions(prev => prev + 1);\r\n      await api.post('/focus-mode/stop');\r\n      // Earn focus credits for completing a session\r\n      await api.post('/rewards/earn', { amount: 10, reason: 'Completed focus session' });\r\n    } catch (err: any) {\r\n      setError('Failed to complete focus session');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleBreakComplete = async () => {\r\n    try {\r\n      setIsBreak(false);\r\n      await api.post('/focus-mode/start');\r\n    } catch (err) {\r\n      setError('Failed to start new focus session');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const startFocusMode = async () => {\r\n    try {\r\n      const response = await api.post('/focus-mode/start');\r\n      setIsActive(true);\r\n      setIsPaused(false);\r\n      setIsBreak(false);\r\n      setRemainingTime(focusDuration * 60);\r\n      setError('');\r\n    } catch (err) {\r\n      setError('Failed to start focus mode');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const pauseFocusMode = () => {\r\n    setIsPaused(true);\r\n  };\r\n\r\n  const resumeFocusMode = () => {\r\n    setIsPaused(false);\r\n  };\r\n\r\n  const stopFocusMode = async () => {\r\n    try {\r\n      await api.post('/focus-mode/stop');\r\n      setIsActive(false);\r\n      setIsPaused(false);\r\n      setRemainingTime(focusDuration * 60);\r\n      setIsBreak(false);\r\n      setError('');\r\n    } catch (err) {\r\n      setError('Failed to stop focus mode');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds: number): string => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"focus-mode-container\">\r\n      <h2>Focus Mode</h2>\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n\r\n      <div className=\"timer-display\">\r\n        <div className=\"timer\">\r\n          <h3>{isBreak ? 'Break Time' : 'Focus Time'}</h3>\r\n          <div className=\"time\">{formatTime(remainingTime)}</div>\r\n        </div>\r\n\r\n        <div className=\"session-info\">\r\n          <p>Completed Sessions: {completedSessions}</p>\r\n          <p>Current Mode: {isBreak ? 'Break' : 'Focus'}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"timer-controls\">\r\n        {!isActive ? (\r\n          <div className=\"setup-controls\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"focusDuration\">Focus Duration (minutes):</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"focusDuration\"\r\n                value={focusDuration}\r\n                onChange={(e) => setFocusDuration(Math.max(1, parseInt(e.target.value) || 25))}\r\n                min=\"1\"\r\n                max=\"60\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"breakDuration\">Break Duration (minutes):</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"breakDuration\"\r\n                value={breakDuration}\r\n                onChange={(e) => setBreakDuration(Math.max(1, parseInt(e.target.value) || 5))}\r\n                min=\"1\"\r\n                max=\"30\"\r\n              />\r\n            </div>\r\n            <button onClick={startFocusMode}>Start Focus Mode</button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"active-controls\">\r\n            {isPaused ? (\r\n              <button onClick={resumeFocusMode}>Resume</button>\r\n            ) : (\r\n              <button onClick={pauseFocusMode}>Pause</button>\r\n            )}\r\n            <button onClick={stopFocusMode}>Stop</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"focus-explanation\">\r\n        <h3>About Focus Mode</h3>\r\n        <p>\r\n          Focus Mode uses the Pomodoro Technique to help you maintain concentration and productivity.\r\n          Work for a set period (default 25 minutes), then take a short break (default 5 minutes).\r\n          This cycle helps maintain mental freshness and sustained focus.\r\n        </p>\r\n        <p>\r\n          Each completed focus session earns you Focus Credits that can be redeemed for rewards!\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FocusMode;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}