{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amitk\\\\Capstone\\\\SocialFriction\\\\frontend\\\\src\\\\components\\\\MoodCheckIn.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoodCheckIn = () => {\n  _s();\n  var _moods$find, _moods$find2;\n  const [mood, setMood] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n  const [error, setError] = useState('');\n  const moods = [{\n    value: 'happy',\n    label: 'Happy',\n    emoji: 'ðŸ˜Š'\n  }, {\n    value: 'calm',\n    label: 'Calm',\n    emoji: 'ðŸ˜Œ'\n  }, {\n    value: 'sad',\n    label: 'Sad',\n    emoji: 'ðŸ˜¢'\n  }, {\n    value: 'anxious',\n    label: 'Anxious',\n    emoji: 'ðŸ˜°'\n  }, {\n    value: 'angry',\n    label: 'Angry',\n    emoji: 'ðŸ˜ '\n  }, {\n    value: 'bored',\n    label: 'Bored',\n    emoji: 'ðŸ˜’'\n  }];\n  const handleMoodSelect = selectedMood => {\n    setMood(selectedMood);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!mood) {\n      setError('Please select a mood');\n      return;\n    }\n    try {\n      await api.post('/mood/check-in', {\n        mood\n      });\n      setSubmitted(true);\n      setError('');\n    } catch (err) {\n      setError('Failed to submit mood check-in');\n      console.error(err);\n    }\n  };\n  const handleReset = () => {\n    setMood('');\n    setSubmitted(false);\n    setError('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mood-check-in-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mood Check-In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), submitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Thank you for checking in your mood!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You selected: \", (_moods$find = moods.find(m => m.value === mood)) === null || _moods$find === void 0 ? void 0 : _moods$find.label, \" \", (_moods$find2 = moods.find(m => m.value === mood)) === null || _moods$find2 === void 0 ? void 0 : _moods$find2.emoji]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReset,\n        children: \"Check In Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"How are you feeling right now?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mood-options\",\n        children: moods.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mood-option ${mood === m.value ? 'selected' : ''}`,\n          onClick: () => handleMoodSelect(m.value),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mood-emoji\",\n            children: m.emoji\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mood-label\",\n            children: m.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)]\n        }, m.value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mood-explanation\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Why Check In?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Being aware of your mood before accessing certain sites can help you make more mindful decisions about your online activities. It encourages self-reflection and emotional awareness, which are key components of digital wellbeing.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(MoodCheckIn, \"7gQsgJZUqS2yk8axLLkV/LDzLQU=\");\n_c = MoodCheckIn;\nexport default MoodCheckIn;\nvar _c;\n$RefreshReg$(_c, \"MoodCheckIn\");","map":{"version":3,"names":["React","useState","api","jsxDEV","_jsxDEV","MoodCheckIn","_s","_moods$find","_moods$find2","mood","setMood","submitted","setSubmitted","error","setError","moods","value","label","emoji","handleMoodSelect","selectedMood","handleSubmit","e","preventDefault","post","err","console","handleReset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","find","m","onClick","onSubmit","map","type","_c","$RefreshReg$"],"sources":["C:/Users/amitk/Capstone/SocialFriction/frontend/src/components/MoodCheckIn.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst MoodCheckIn: React.FC = () => {\r\n  const [mood, setMood] = useState<string>('');\r\n  const [submitted, setSubmitted] = useState<boolean>(false);\r\n  const [error, setError] = useState<string>('');\r\n\r\n  const moods = [\r\n    { value: 'happy', label: 'Happy', emoji: 'ðŸ˜Š' },\r\n    { value: 'calm', label: 'Calm', emoji: 'ðŸ˜Œ' },\r\n    { value: 'sad', label: 'Sad', emoji: 'ðŸ˜¢' },\r\n    { value: 'anxious', label: 'Anxious', emoji: 'ðŸ˜°' },\r\n    { value: 'angry', label: 'Angry', emoji: 'ðŸ˜ ' },\r\n    { value: 'bored', label: 'Bored', emoji: 'ðŸ˜’' },\r\n  ];\r\n\r\n  const handleMoodSelect = (selectedMood: string) => {\r\n    setMood(selectedMood);\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!mood) {\r\n      setError('Please select a mood');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await api.post('/mood/check-in', { mood });\r\n      setSubmitted(true);\r\n      setError('');\r\n    } catch (err: any) {\r\n      setError('Failed to submit mood check-in');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setMood('');\r\n    setSubmitted(false);\r\n    setError('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"mood-check-in-container\">\r\n      <h2>Mood Check-In</h2>\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n\r\n      {submitted ? (\r\n        <div className=\"success-message\">\r\n          <p>Thank you for checking in your mood!</p>\r\n          <p>You selected: {moods.find(m => m.value === mood)?.label} {moods.find(m => m.value === mood)?.emoji}</p>\r\n          <button onClick={handleReset}>Check In Again</button>\r\n        </div>\r\n      ) : (\r\n        <form onSubmit={handleSubmit}>\r\n          <p>How are you feeling right now?</p>\r\n          <div className=\"mood-options\">\r\n            {moods.map((m) => (\r\n              <div\r\n                key={m.value}\r\n                className={`mood-option ${mood === m.value ? 'selected' : ''}`}\r\n                onClick={() => handleMoodSelect(m.value)}\r\n              >\r\n                <div className=\"mood-emoji\">{m.emoji}</div>\r\n                <div className=\"mood-label\">{m.label}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      )}\r\n\r\n      <div className=\"mood-explanation\">\r\n        <h3>Why Check In?</h3>\r\n        <p>\r\n          Being aware of your mood before accessing certain sites can help you make more mindful\r\n          decisions about your online activities. It encourages self-reflection and emotional\r\n          awareness, which are key components of digital wellbeing.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoodCheckIn;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}