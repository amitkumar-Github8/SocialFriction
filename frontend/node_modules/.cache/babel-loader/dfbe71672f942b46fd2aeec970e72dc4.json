{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amitk\\\\Capstone\\\\SocialFriction\\\\frontend\\\\src\\\\components\\\\Alternatives.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alternatives = () => {\n  _s();\n  const [alternatives, setAlternatives] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Fetch mindful alternatives when component mounts\n    const fetchAlternatives = async () => {\n      try {\n        setLoading(true);\n        const response = await api.get('/alternatives/suggest');\n        setAlternatives(response.data);\n        setError('');\n      } catch (err) {\n        setError('Failed to fetch alternatives');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAlternatives();\n  }, []);\n\n  // If no alternatives are available yet, provide some default ones\n  useEffect(() => {\n    if (!loading && alternatives.length === 0 && !error) {\n      setAlternatives([{\n        id: '1',\n        title: 'Take a short walk',\n        description: 'Step outside for a quick 5-10 minute walk to refresh your mind.',\n        duration: '5-10 minutes',\n        category: 'physical'\n      }, {\n        id: '2',\n        title: 'Practice deep breathing',\n        description: 'Take 10 deep breaths, inhaling for 4 counts and exhaling for 6 counts.',\n        duration: '2-3 minutes',\n        category: 'mindfulness'\n      }, {\n        id: '3',\n        title: 'Read a book',\n        description: 'Read a few pages of a book you enjoy instead of scrolling through social media.',\n        duration: '10-15 minutes',\n        category: 'learning'\n      }, {\n        id: '4',\n        title: 'Listen to calming music',\n        description: 'Put on some relaxing music and close your eyes for a few minutes.',\n        duration: '5-10 minutes',\n        category: 'relaxation'\n      }, {\n        id: '5',\n        title: 'Do a quick meditation',\n        description: 'Follow a short guided meditation to center yourself.',\n        duration: '3-5 minutes',\n        category: 'mindfulness'\n      }]);\n    }\n  }, [loading, alternatives, error]);\n  const categories = ['all', 'physical', 'mindfulness', 'learning', 'relaxation'];\n  const filteredAlternatives = selectedCategory === 'all' ? alternatives : alternatives.filter(alt => alt.category === selectedCategory);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alternatives-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mindful Alternatives\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-filter\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Filter by category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-buttons\",\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `category-button ${selectedCategory === category ? 'active' : ''}`,\n          onClick: () => setSelectedCategory(category),\n          children: category.charAt(0).toUpperCase() + category.slice(1)\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading alternatives...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alternatives-list\",\n      children: filteredAlternatives.length > 0 ? filteredAlternatives.map(alternative => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alternative-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: alternative.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"description\",\n          children: alternative.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alternative-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"duration\",\n            children: alternative.duration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"category\",\n            children: alternative.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)]\n      }, alternative.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No alternatives found for this category.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alternatives-explanation\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Why Try Alternatives?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"When you feel the urge to engage with potentially distracting content, trying a mindful alternative can help break the habit loop. These activities are designed to provide a refreshing break while promoting wellbeing and mindfulness.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(Alternatives, \"s6CqruSdk4X8/CV8qLKwJEk87BM=\");\n_c = Alternatives;\nexport default Alternatives;\nvar _c;\n$RefreshReg$(_c, \"Alternatives\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","Alternatives","_s","alternatives","setAlternatives","selectedCategory","setSelectedCategory","error","setError","loading","setLoading","fetchAlternatives","response","get","data","err","console","length","id","title","description","duration","category","categories","filteredAlternatives","filter","alt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","charAt","toUpperCase","slice","alternative","_c","$RefreshReg$"],"sources":["C:/Users/amitk/Capstone/SocialFriction/frontend/src/components/Alternatives.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../services/api';\r\n\r\ninterface Alternative {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  duration: string;\r\n  category: string;\r\n}\r\n\r\nconst Alternatives: React.FC = () => {\r\n  const [alternatives, setAlternatives] = useState<Alternative[]>([]);\r\n  const [selectedCategory, setSelectedCategory] = useState<string>('all');\r\n  const [error, setError] = useState<string>('');\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    // Fetch mindful alternatives when component mounts\r\n    const fetchAlternatives = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await api.get('/alternatives/suggest');\r\n        setAlternatives(response.data);\r\n        setError('');\r\n      } catch (err: any) {\r\n        setError('Failed to fetch alternatives');\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAlternatives();\r\n  }, []);\r\n\r\n  // If no alternatives are available yet, provide some default ones\r\n  useEffect(() => {\r\n    if (!loading && alternatives.length === 0 && !error) {\r\n      setAlternatives([\r\n        {\r\n          id: '1',\r\n          title: 'Take a short walk',\r\n          description: 'Step outside for a quick 5-10 minute walk to refresh your mind.',\r\n          duration: '5-10 minutes',\r\n          category: 'physical'\r\n        },\r\n        {\r\n          id: '2',\r\n          title: 'Practice deep breathing',\r\n          description: 'Take 10 deep breaths, inhaling for 4 counts and exhaling for 6 counts.',\r\n          duration: '2-3 minutes',\r\n          category: 'mindfulness'\r\n        },\r\n        {\r\n          id: '3',\r\n          title: 'Read a book',\r\n          description: 'Read a few pages of a book you enjoy instead of scrolling through social media.',\r\n          duration: '10-15 minutes',\r\n          category: 'learning'\r\n        },\r\n        {\r\n          id: '4',\r\n          title: 'Listen to calming music',\r\n          description: 'Put on some relaxing music and close your eyes for a few minutes.',\r\n          duration: '5-10 minutes',\r\n          category: 'relaxation'\r\n        },\r\n        {\r\n          id: '5',\r\n          title: 'Do a quick meditation',\r\n          description: 'Follow a short guided meditation to center yourself.',\r\n          duration: '3-5 minutes',\r\n          category: 'mindfulness'\r\n        }\r\n      ]);\r\n    }\r\n  }, [loading, alternatives, error]);\r\n\r\n  const categories = ['all', 'physical', 'mindfulness', 'learning', 'relaxation'];\r\n\r\n  const filteredAlternatives = selectedCategory === 'all'\r\n    ? alternatives\r\n    : alternatives.filter(alt => alt.category === selectedCategory);\r\n\r\n  return (\r\n    <div className=\"alternatives-container\">\r\n      <h2>Mindful Alternatives</h2>\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n\r\n      <div className=\"category-filter\">\r\n        <p>Filter by category:</p>\r\n        <div className=\"category-buttons\">\r\n          {categories.map(category => (\r\n            <button\r\n              key={category}\r\n              className={`category-button ${selectedCategory === category ? 'active' : ''}`}\r\n              onClick={() => setSelectedCategory(category)}\r\n            >\r\n              {category.charAt(0).toUpperCase() + category.slice(1)}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <div className=\"loading\">Loading alternatives...</div>\r\n      ) : (\r\n        <div className=\"alternatives-list\">\r\n          {filteredAlternatives.length > 0 ? (\r\n            filteredAlternatives.map(alternative => (\r\n              <div key={alternative.id} className=\"alternative-card\">\r\n                <h3>{alternative.title}</h3>\r\n                <p className=\"description\">{alternative.description}</p>\r\n                <div className=\"alternative-meta\">\r\n                  <span className=\"duration\">{alternative.duration}</span>\r\n                  <span className=\"category\">{alternative.category}</span>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No alternatives found for this category.</p>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"alternatives-explanation\">\r\n        <h3>Why Try Alternatives?</h3>\r\n        <p>\r\n          When you feel the urge to engage with potentially distracting content, trying a mindful\r\n          alternative can help break the habit loop. These activities are designed to provide a\r\n          refreshing break while promoting wellbeing and mindfulness.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alternatives;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}